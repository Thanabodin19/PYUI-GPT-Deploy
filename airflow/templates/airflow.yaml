apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: airflow
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: airflow
    repoURL: https://airflow.apache.org
    targetRevision: {{ .Values.airflow.helmChartVersion }}
    helm:
      parameters:
        - name: images.airflow.repository
          value: {{ .Values.airflow.repository }}
        - name: images.airflow.tag
          value: {{ .Values.airflow.tag }}
      values: |
        executor: "KubernetesExecutor"
        createUserJob:
          useHelmHooks: false
          applyCustomEnv: false
          jobAnnotations:
            "argocd.argoproj.io/hook": PostSync
            "argocd.argoproj.io/hook-delete-policy": HookSucceeded
        migrateDatabaseJob:
          useHelmHooks: false
          applyCustomEnv: false
          jobAnnotations:
              "argocd.argoproj.io/hook": Sync
        useStandardNaming: true
        webserver:
          resources:
            limits:
              memory: 4Gi
            requests:
              cpu: 1000m
              memory: 4Gi
          livenessProbe:
            initialDelaySeconds: 20
            timeoutSeconds: 120
            failureThreshold: 5
            periodSeconds: 45

          readinessProbe:
            initialDelaySeconds: 20
            timeoutSeconds: 120
            failureThreshold: 5
            periodSeconds: 45

          startupProbe:
            timeoutSeconds: 30
            failureThreshold: 10
            periodSeconds: 45

        config:
          api:
            auth_backends: 'airflow.api.auth.backend.basic_auth'
          logging:
            remote_logging: "True"
            remote_log_conn_id: "minio_conn"
            remote_base_log_folder: "s3://airflow-logs"
            encrypt_s3_logs: "False"
            colored_console_log: "True"
          core:
            remote_logging: "True"
            remote_log_conn_id: "minio_conn"

        volumeMounts:
          - name: airflow-tmp-volume
            mountPath: /opt/airflow/tmp

        volumes:
          - name: airflow-tmp-volume
            persistentVolumeClaim:
              claimName: airflow-tmp-pvc
  
  destination:
    server: "https://kubernetes.default.svc"
    namespace: airflow
